image:
  repository: gcr.io/clabs-abacus/abacus-agent
  pullPolicy: Always
  tag: 'latest'

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  create: true
  annotations: {}
  name: ''

externalSecrets:
  clusterSecretStore:

podAnnotations: {}
podCommonLabels: {}

storage:
  storageClass: 'standard'
  accessModes: ReadWriteOnce

# -- Abacus Overrides
# By Default, Abacus Agents load the config baked into the Docker Image
# Pass values here in order to override the values in the config
# Note: For successful operation, one _must_ pass signer keys as
#       they are not baked into the image for security reasons.
abacus:
  # Sets the config folder to use
  runEnv: 'default'
  context: 'abacus'
  # Sets the base config to be used (switch between Homes)
  baseConfig: 'base.json'
  # Set the DB location to be the volume
  dbPath: /usr/share/abacus
  rustBacktrace: full
  tracing:
    # Set the log formatting
    format: json
    # Set the log level
    level: info
    uri: ''
  metrics:
    port: 9090
  outboxChain:
    name: 'kovan'
    # -- The contract address for the home contract
    address:
    # -- The hard-coded domain corresponding to this blockchain
    domain:
    # -- RPC Style
    rpcStyle: # "ethereum"
    connection:
      type: # "http"
    # -- Connection string pointing to an RPC endpoint for the home chain
  aws: # true | false
  gelatoApiKeyRequired: # true | false

  # -- Replica chain overrides, a sequence
  inboxChains:
    - name: 'alfajores'
      disabled: false
      # -- The contract address for the replica contract
      address:
      domain:
      rpcStyle: # "ethereum"
      connection:
        type: # "http"
      # -- Connection string pointing to an RPC endpoint for the replica chain

  # Abacus Agent Roles
  # Individually Switchable via <role>.enabled
  validator:
    enabled: false
    podAnnotations:
      prometheus.io/port: '9090'
      prometheus.io/scrape: 'true'
    podLabels: {}
    storage:
      size: 10Gi
      snapshot:
        enabled: false
        name: ''
    resources:
      requests:
        cpu: 100m
        memory: 250m
    # -- Transaction Signing keys for home and replica(s)
    signer: {}
    # -- How long to wait between checking for updates
    configs:
      - interval:
        reorgPeriod:
        checkpointSyncers:

  relayer:
    enabled: false
    podAnnotations:
      prometheus.io/port: '9090'
      prometheus.io/scrape: 'true'
    podLabels: {}
    storage:
      size: 10Gi
      snapshot:
        enabled: false
        name: ''
    resources:
      requests:
        cpu: 250m
        memory: 1Gi
    signers:
      - name: 'kovan'
        # aws:
      - name: 'alfajores'
        # aws:
    config:
      signedCheckpointPollingInterval:
      multisigCheckpointSyncer:
        threshold:
        checkpointSyncers:

  kathy:
    enabled: false

podSecurityContext:
  fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 250m
  #   memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}
